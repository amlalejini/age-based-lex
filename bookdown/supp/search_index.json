[["index.html", "Supplemental Material for ‘Using lineage age to augment search space exploration in lexicase selection’ Chapter 1 Introduction 1.1 About our supplemental material 1.2 Contributing authors", " Supplemental Material for ‘Using lineage age to augment search space exploration in lexicase selection’ Karen Suzue, Charles Ofria, and Alexander Lalejini 2024-08-01 Chapter 1 Introduction This is not intended as a stand-alone document, but as a companion to our manuscript. 1.1 About our supplemental material As you may have noticed (unless you’re reading a pdf version of this), our supplemental material is hosted using GitHub pages. We compiled our data analyses and supplemental documentation into this nifty web-accessible book using bookdown. The source code/configuration files for this supplemental material can be found in this GitHub repository. Our supplemental material includes the following: GP instruction set (Section 2) Experiment data availability (Section 3) GP data analysis + statistics (Section 4) 1.2 Contributing authors Karen Suzue Charles Ofria Alexander Lalejini "],["signalgp-instruction-set.html", "Chapter 2 SignalGP instruction set 2.1 Default Instructions 2.2 Problem-specific instructions", " Chapter 2 SignalGP instruction set Below, we document the instruction set used in our GP system for our experiments. Abbreviations: EOP: End of program Reg: local register Reg[0] indicates the value at the register specified by an instruction’s first argument, Reg[1] indicates the value at the register specified by an instruction’s second argument, and Reg[2] indicates the value at the register specified by the instruction’s third argument. Reg[0], Reg[1], etc: Register 0, Register 1, etc. Input: input buffer Follows same scheme as Reg Output: output buffer Follows same scheme as Reg Global: global memory buffer Follows same scheme as Reg Arg: Instruction argument Arg[i] indicates the i’th instruction argument (an integer encoded in the genome) E.g., Arg[0] is an instruction’s first argument Instructions that would produce undefined behavior (e.g., division by zero) are treated as no operations. 2.1 Default Instructions I.e., instructions used across all diagnostic tasks. Instruction Arguments Used Description Nop 0 No operation Not 1 Reg[0] = !Reg[0] Inc 1 Reg[0] = Reg[0] + 1 Dec 1 Reg[0] = Reg[0] - 1 Add 3 Reg[0] = Reg[1] + Reg[2] Sub 3 Reg[0] = Reg[1] - Reg[2] Mult 3 Reg[0] = Reg[1] * Reg[2] Div 3 Reg[0] = Reg[1] / Reg[2] Mod 3 Reg[0] = Reg[1] % Reg[2] Nand 2 Reg[0] = !(R1g[0] &amp; Reg[2]) TestEqu 3 Reg[0] = Reg[1] == Reg[2] TestNEqu 3 Reg[0] = Reg[1] != Reg[2] TestLess 3 Reg[0] = Reg[1] &lt; Reg[2] TestLessEqu 3 Reg[0] = Reg[1] &lt;= Reg[2] TestGreater 3 Reg[0] = Reg[1] &gt; Reg[2] TestGreaterEqu 3 Reg[0] = Reg[1] &gt;= Reg[2] SetMem 2 Reg[0] = Arg[1] Terminal 1 Reg[0] = double value encoded by instruction tag CopyMem 2 Reg[0] = Reg[1] SwapMem 2 Swap(Reg[0], Reg[1]) InputToWorking 2 Reg[0] = Input[1] WorkingToOutput 2 Output[1] = Reg[0] If 1 If Reg[0] != 0, proceed. Otherwise skip to the next Close or EOP. While 1 While Reg[0] != 0, loop. Otherwise skip to next Close or EOP. Close 0 Indicate the end of a control block of code (e.g., loop, if). Break 0 Break out of current control flow (e.g., loop). Call 0 Call a function, using this instruction’s tag to determine which function is called. Routine 0 Same as call, but local memory is shared. Sort of like a jump that will jump back when the routine ends. Return 0 Return from the current function call. WorkingToGlobal 2 Global[1] = Reg[0] GlobalToWorking 2 Reg[1] = Global[0] FullGlobalToWorking 0 Copy entire global memory buffer into working memory buffer FullWorkingToGlobal 0 Copy entire working memory buffer into global memory buffer Note that Nand performs a bitwise operation. 2.2 Problem-specific instructions Each problem has problem-specific instructions for producing output. 2.2.1 Bouncing Balls SubmitOutput 2.2.2 Dice Game SubmitOutput 2.2.3 GCD SubmitOutput 2.2.4 Grade SubmitA SubmitB SubmitC SubmitD SubmitF 2.2.5 Snow Day SubmitOutput "],["data-availability.html", "Chapter 3 Data availability 3.1 Source code 3.2 Experimental results", " Chapter 3 Data availability 3.1 Source code Source code for this work can be accessed on GitHub: https://github.com/amlalejini/age-based-lex. 3.2 Experimental results Data generated from our experiments used in analyses are available online, archived in an OSF repository: https://osf.io/efb4j/. "],["program-synthesis-experiments.html", "Chapter 4 Program synthesis experiments 4.1 Dependencies 4.2 Setup 4.3 Interval 100 with age order limit 10", " Chapter 4 Program synthesis experiments experiment_slug &lt;- &quot;2024-05-20-inj-int&quot; working_directory &lt;- paste0( &quot;experiments/&quot;, experiment_slug, &quot;/analysis/&quot; ) if (exists(&quot;bookdown_wd_prefix&quot;)) { working_directory &lt;- paste0( bookdown_wd_prefix, working_directory ) } 4.1 Dependencies library(tidyverse) ## Warning: package &#39;ggplot2&#39; was built under R version 4.2.3 ## Warning: package &#39;dplyr&#39; was built under R version 4.2.3 ## Warning: package &#39;stringr&#39; was built under R version 4.2.3 ## ── Attaching core tidyverse packages ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 2.0.0 ── ## ✔ dplyr 1.1.4 ✔ readr 2.1.4 ## ✔ forcats 1.0.0 ✔ stringr 1.5.1 ## ✔ ggplot2 3.5.1 ✔ tibble 3.2.1 ## ✔ lubridate 1.9.3 ✔ tidyr 1.3.0 ## ✔ purrr 1.0.2 ## ── Conflicts ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() ## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors library(cowplot) ## Warning: package &#39;cowplot&#39; was built under R version 4.2.3 ## ## Attaching package: &#39;cowplot&#39; ## ## The following object is masked from &#39;package:lubridate&#39;: ## ## stamp library(RColorBrewer) library(khroma) library(rstatix) ## ## Attaching package: &#39;rstatix&#39; ## ## The following object is masked from &#39;package:stats&#39;: ## ## filter library(knitr) library(kableExtra) ## ## Attaching package: &#39;kableExtra&#39; ## ## The following object is masked from &#39;package:dplyr&#39;: ## ## group_rows source(&quot;https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R&quot;) library(ggpattern) print(version) ## _ ## platform aarch64-apple-darwin20 ## arch aarch64 ## os darwin20 ## system aarch64, darwin20 ## status ## major 4 ## minor 2.1 ## year 2022 ## month 06 ## day 23 ## svn rev 82513 ## language R ## version.string R version 4.2.1 (2022-06-23) ## nickname Funny-Looking Kid 4.2 Setup # Configure our default graphing theme theme_set(theme_cowplot()) # Create a directory to store plots plot_directory &lt;- paste0(working_directory, &quot;plots/&quot;) dir.create(plot_directory, showWarnings=FALSE) 4.2.1 Load summary data summary_data_loc &lt;- paste0(working_directory, &quot;data/aggregate.csv&quot;) summary_data &lt;- read_csv(summary_data_loc) ## Rows: 2700 Columns: 61 ## ── Column specification ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (11): ANCESTOR_FILE_PATH, EVAL_MODE, ORG_INJECTION_MODE, POP_INIT_MODE, ... ## dbl (50): AGE_LEX_AGE_ORDER_LIMIT, EVAL_CPU_CYCLES_PER_TEST, MAX_ACTIVE_THRE... ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. summary_data &lt;- summary_data %&gt;% mutate( PROBLEM = as.factor(PROBLEM), SELECTION = as.factor(SELECTION), EVAL_MODE = as.factor(EVAL_MODE), NUM_COHORTS = as.factor(NUM_COHORTS), TEST_DOWNSAMPLE_RATE = as.factor(TEST_DOWNSAMPLE_RATE), AGE_LEX_AGE_ORDER_LIMIT = as.factor(AGE_LEX_AGE_ORDER_LIMIT), RECOMB_PER_FUNC_SEQ_RECOMB_RATE = as.factor(RECOMB_PER_FUNC_SEQ_RECOMB_RATE), ORG_INJECTION_COUNT = as.factor(ORG_INJECTION_COUNT), ORG_INJECTION_MODE = factor( ORG_INJECTION_MODE, levels = c( &quot;none&quot;, &quot;random&quot;, &quot;recombine-random&quot;, &quot;recombine-complement&quot; ) ), inject_cond = str_c(SELECTION, ORG_INJECTION_MODE, sep = &quot;_&quot;), ORG_INJECTION_INTERVAL = as.factor(ORG_INJECTION_INTERVAL), .keep = &quot;all&quot; ) %&gt;% mutate( inject_cond = factor( inject_cond, levels = c( &quot;age-lexicase_random&quot;, &quot;lexicase_random&quot;, &quot;lexicase_none&quot; ), labels = c( &quot;age-lex_inj-rand&quot;, &quot;lex_inj-rand&quot;, &quot;lex_inj-none&quot; ) ), sol_descends_injected = elite_elite_age != update &amp; found_solution == &quot;1&quot; ) solution_counts &lt;- summary_data %&gt;% group_by( PROBLEM, SELECTION, AGE_LEX_AGE_ORDER_LIMIT, ORG_INJECTION_COUNT, ORG_INJECTION_MODE, ORG_INJECTION_INTERVAL, inject_cond ) %&gt;% summarize( solution_count = sum(found_solution == &quot;1&quot;), replicates = n(), no_solution_count = n() - sum(found_solution == &quot;1&quot;), elite_from_injected = sum(elite_elite_age != update), sol_from_injected = sum(elite_elite_age != update &amp; found_solution == &quot;1&quot;) ) ## `summarise()` has grouped output by &#39;PROBLEM&#39;, &#39;SELECTION&#39;, ## &#39;AGE_LEX_AGE_ORDER_LIMIT&#39;, &#39;ORG_INJECTION_COUNT&#39;, &#39;ORG_INJECTION_MODE&#39;, ## &#39;ORG_INJECTION_INTERVAL&#39;. You can override using the `.groups` argument. # print(solution_counts, n=208) solution_table &lt;- kable(solution_counts) %&gt;% kable_styling(latex_options = &quot;striped&quot;, font_size = 25) save_kable(solution_table, paste0(plot_directory, &quot;solution_counts_table.pdf&quot;)) ## Note that HTML color may not be displayed on PDF properly. solution_table PROBLEM SELECTION AGE_LEX_AGE_ORDER_LIMIT ORG_INJECTION_COUNT ORG_INJECTION_MODE ORG_INJECTION_INTERVAL inject_cond solution_count replicates no_solution_count elite_from_injected sol_from_injected bouncing-balls age-lexicase 10 100 random 100 age-lex_inj-rand 1 30 29 6 0 bouncing-balls age-lexicase 10 100 random 500 age-lex_inj-rand 4 30 26 8 0 bouncing-balls age-lexicase 10 100 random 1000 age-lex_inj-rand 1 30 29 6 0 bouncing-balls age-lexicase 20 100 random 100 age-lex_inj-rand 0 30 30 3 0 bouncing-balls age-lexicase 20 100 random 500 age-lex_inj-rand 1 30 29 3 0 bouncing-balls age-lexicase 20 100 random 1000 age-lex_inj-rand 0 30 30 3 0 bouncing-balls lexicase 10 100 none 100 lex_inj-none 3 30 27 0 0 bouncing-balls lexicase 10 100 none 500 lex_inj-none 1 30 29 0 0 bouncing-balls lexicase 10 100 none 1000 lex_inj-none 0 30 30 0 0 bouncing-balls lexicase 10 100 random 100 lex_inj-rand 0 30 30 0 0 bouncing-balls lexicase 10 100 random 500 lex_inj-rand 1 30 29 0 0 bouncing-balls lexicase 10 100 random 1000 lex_inj-rand 2 30 28 0 0 bouncing-balls lexicase 20 100 none 100 lex_inj-none 1 30 29 0 0 bouncing-balls lexicase 20 100 none 500 lex_inj-none 3 30 27 0 0 bouncing-balls lexicase 20 100 none 1000 lex_inj-none 0 30 30 0 0 bouncing-balls lexicase 20 100 random 100 lex_inj-rand 1 30 29 0 0 bouncing-balls lexicase 20 100 random 500 lex_inj-rand 0 30 30 0 0 bouncing-balls lexicase 20 100 random 1000 lex_inj-rand 1 30 29 0 0 dice-game age-lexicase 10 100 random 100 age-lex_inj-rand 20 30 10 0 0 dice-game age-lexicase 10 100 random 500 age-lex_inj-rand 10 30 20 4 1 dice-game age-lexicase 10 100 random 1000 age-lex_inj-rand 15 30 15 9 4 dice-game age-lexicase 20 100 random 100 age-lex_inj-rand 17 30 13 0 0 dice-game age-lexicase 20 100 random 500 age-lex_inj-rand 13 30 17 1 0 dice-game age-lexicase 20 100 random 1000 age-lex_inj-rand 13 30 17 0 0 dice-game lexicase 10 100 none 100 lex_inj-none 15 30 15 0 0 dice-game lexicase 10 100 none 500 lex_inj-none 16 30 14 0 0 dice-game lexicase 10 100 none 1000 lex_inj-none 14 30 16 0 0 dice-game lexicase 10 100 random 100 lex_inj-rand 14 30 16 0 0 dice-game lexicase 10 100 random 500 lex_inj-rand 14 30 16 0 0 dice-game lexicase 10 100 random 1000 lex_inj-rand 17 30 13 0 0 dice-game lexicase 20 100 none 100 lex_inj-none 10 30 20 0 0 dice-game lexicase 20 100 none 500 lex_inj-none 9 30 21 0 0 dice-game lexicase 20 100 none 1000 lex_inj-none 14 30 16 0 0 dice-game lexicase 20 100 random 100 lex_inj-rand 15 30 15 0 0 dice-game lexicase 20 100 random 500 lex_inj-rand 15 30 15 0 0 dice-game lexicase 20 100 random 1000 lex_inj-rand 9 30 21 0 0 gcd age-lexicase 10 100 random 100 age-lex_inj-rand 19 30 11 29 18 gcd age-lexicase 10 100 random 500 age-lex_inj-rand 27 30 3 21 18 gcd age-lexicase 10 100 random 1000 age-lex_inj-rand 24 30 6 17 13 gcd age-lexicase 20 100 random 100 age-lex_inj-rand 19 30 11 17 11 gcd age-lexicase 20 100 random 500 age-lex_inj-rand 20 30 10 7 5 gcd age-lexicase 20 100 random 1000 age-lex_inj-rand 24 30 6 6 5 gcd lexicase 10 100 none 100 lex_inj-none 18 30 12 0 0 gcd lexicase 10 100 none 500 lex_inj-none 19 30 11 0 0 gcd lexicase 10 100 none 1000 lex_inj-none 21 30 9 0 0 gcd lexicase 10 100 random 100 lex_inj-rand 16 30 14 0 0 gcd lexicase 10 100 random 500 lex_inj-rand 22 30 8 0 0 gcd lexicase 10 100 random 1000 lex_inj-rand 22 30 8 0 0 gcd lexicase 20 100 none 100 lex_inj-none 22 30 8 0 0 gcd lexicase 20 100 none 500 lex_inj-none 22 30 8 0 0 gcd lexicase 20 100 none 1000 lex_inj-none 19 30 11 0 0 gcd lexicase 20 100 random 100 lex_inj-rand 17 30 13 0 0 gcd lexicase 20 100 random 500 lex_inj-rand 17 30 13 0 0 gcd lexicase 20 100 random 1000 lex_inj-rand 20 30 10 0 0 grade age-lexicase 10 100 random 100 age-lex_inj-rand 30 30 0 21 21 grade age-lexicase 10 100 random 500 age-lex_inj-rand 30 30 0 21 21 grade age-lexicase 10 100 random 1000 age-lex_inj-rand 30 30 0 16 16 grade age-lexicase 20 100 random 100 age-lex_inj-rand 30 30 0 20 20 grade age-lexicase 20 100 random 500 age-lex_inj-rand 30 30 0 12 12 grade age-lexicase 20 100 random 1000 age-lex_inj-rand 30 30 0 11 11 grade lexicase 10 100 none 100 lex_inj-none 20 30 10 0 0 grade lexicase 10 100 none 500 lex_inj-none 24 30 6 0 0 grade lexicase 10 100 none 1000 lex_inj-none 23 30 7 0 0 grade lexicase 10 100 random 100 lex_inj-rand 21 30 9 0 0 grade lexicase 10 100 random 500 lex_inj-rand 23 30 7 0 0 grade lexicase 10 100 random 1000 lex_inj-rand 18 30 12 0 0 grade lexicase 20 100 none 100 lex_inj-none 23 30 7 0 0 grade lexicase 20 100 none 500 lex_inj-none 21 30 9 0 0 grade lexicase 20 100 none 1000 lex_inj-none 16 30 14 0 0 grade lexicase 20 100 random 100 lex_inj-rand 18 30 12 0 0 grade lexicase 20 100 random 500 lex_inj-rand 24 30 6 0 0 grade lexicase 20 100 random 1000 lex_inj-rand 21 30 9 0 0 snow-day age-lexicase 10 100 random 100 age-lex_inj-rand 0 30 30 9 0 snow-day age-lexicase 10 100 random 500 age-lex_inj-rand 0 30 30 7 0 snow-day age-lexicase 10 100 random 1000 age-lex_inj-rand 2 30 28 9 0 snow-day age-lexicase 20 100 random 100 age-lex_inj-rand 2 30 28 2 1 snow-day age-lexicase 20 100 random 500 age-lex_inj-rand 1 30 29 4 0 snow-day age-lexicase 20 100 random 1000 age-lex_inj-rand 1 30 29 2 0 snow-day lexicase 10 100 none 100 lex_inj-none 0 30 30 0 0 snow-day lexicase 10 100 none 500 lex_inj-none 0 30 30 0 0 snow-day lexicase 10 100 none 1000 lex_inj-none 0 30 30 0 0 snow-day lexicase 10 100 random 100 lex_inj-rand 1 30 29 0 0 snow-day lexicase 10 100 random 500 lex_inj-rand 3 30 27 0 0 snow-day lexicase 10 100 random 1000 lex_inj-rand 0 30 30 0 0 snow-day lexicase 20 100 none 100 lex_inj-none 0 30 30 0 0 snow-day lexicase 20 100 none 500 lex_inj-none 0 30 30 0 0 snow-day lexicase 20 100 none 1000 lex_inj-none 0 30 30 0 0 snow-day lexicase 20 100 random 100 lex_inj-rand 1 30 29 0 0 snow-day lexicase 20 100 random 500 lex_inj-rand 1 30 29 0 0 snow-day lexicase 20 100 random 1000 lex_inj-rand 2 30 28 0 0 4.2.2 Success rates across injection intervals plot &lt;- solution_counts %&gt;% ggplot( aes( x = inject_cond, y = solution_count, fill = ORG_INJECTION_INTERVAL, pattern_angle = inject_cond ) ) + geom_col_pattern( position = &quot;dodge&quot;, pattern = &quot;stripe&quot;, pattern_color = &quot;gray&quot;, pattern_fill = &quot;gray&quot;, pattern_spacing = 0.03, pattern_density = 0.05, # position = position_dodge(width = 0.4) ) + geom_text( aes(y = -0.7, label = solution_count), position = position_dodge(width=0.9) ) + scale_fill_bright() + scale_color_bright() + scale_x_discrete( name = &quot;Inject condition&quot; ) + scale_y_continuous( &quot;Solution count&quot; ) + facet_grid( PROBLEM ~ AGE_LEX_AGE_ORDER_LIMIT ) + theme( legend.position = &quot;right&quot;, axis.text.x = element_text( angle = 30, hjust = 1 ), panel.border = element_rect(color = &quot;gray&quot;, size = 2) ) ## Warning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0. ## ℹ Please use the `linewidth` argument instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. ggsave( filename = paste0(plot_directory, &quot;solutions-bar.pdf&quot;), plot = plot, width = 10, height = 15 ) plot 4.3 Interval 100 with age order limit 10 4.3.1 Problem-solving success plot &lt;- solution_counts %&gt;% filter(ORG_INJECTION_INTERVAL == &quot;100&quot; &amp; AGE_LEX_AGE_ORDER_LIMIT == &quot;10&quot;) %&gt;% ggplot( aes( x = inject_cond, y = solution_count, fill = inject_cond ) ) + geom_col() + geom_text( aes(y = -0.7, label = solution_count), position = position_dodge(width=0.9) ) + scale_fill_bright() + scale_color_bright() + scale_x_discrete( name = &quot;Inject condition&quot;, limits = c(&quot;age-lex_inj-rand&quot;, &quot;lex_inj-rand&quot;, &quot;lex_inj-none&quot;), labels = c(&quot;Inject\\nAge el.&quot;, &quot;Inject\\nNo Age&quot;, &quot;Standard\\nLex.&quot;) ) + scale_y_continuous( &quot;Solution count&quot; ) + facet_wrap( ~ PROBLEM, nrow = 1 ) + theme( legend.position = &quot;none&quot;, axis.text = element_text( size = 18 ), axis.title = element_text( size = 18 ), strip.text = element_text( size = 18 ), # axis.text.x = element_text( # angle = 30, # hjust = 1 # ), panel.border = element_rect(color = &quot;gray&quot;, size = 2) ) ggsave( filename = paste0(plot_directory, &quot;solutions-bar-i100-ol10.pdf&quot;), plot = plot, width = 18, height = 8 ) plot 4.3.1.1 Statistics sol_stats_data &lt;- solution_counts %&gt;% ungroup() %&gt;% select( PROBLEM, ORG_INJECTION_INTERVAL, AGE_LEX_AGE_ORDER_LIMIT, inject_cond, solution_count, no_solution_count ) fisher_results &lt;- data.frame( comparison = character(), group1 = character(), group2 = character(), n = integer(), p = double(), p.adj = double(), p.adj.signif = character() ) # ORG_INJECTION_INTERVAL # AGE_LEX_AGE_ORDER_LIMIT inj_intervals &lt;- levels(sol_stats_data$ORG_INJECTION_INTERVAL) age_limits &lt;- levels(sol_stats_data$AGE_LEX_AGE_ORDER_LIMIT) problems &lt;- levels(sol_stats_data$PROBLEM) for (inj_interval in inj_intervals) { for (age_limit in age_limits) { for (problem in problems) { ft_results &lt;- sol_stats_data %&gt;% filter( PROBLEM == problem &amp; AGE_LEX_AGE_ORDER_LIMIT == age_limit &amp; ORG_INJECTION_INTERVAL == inj_interval ) %&gt;% select(inject_cond, solution_count, no_solution_count) %&gt;% column_to_rownames(var = &quot;inject_cond&quot;) %&gt;% pairwise_fisher_test( p.adjust.method = &quot;holm&quot; ) %&gt;% add_significance(&quot;p.adj&quot;) ft_results &lt;- ft_results %&gt;% mutate( problem = rep(problem, nrow(ft_results)), inj_interval = rep(inj_interval, nrow(ft_results)), age_limit = rep(age_limit, nrow(ft_results)), .keep = &quot;all&quot; ) %&gt;% relocate(problem, inj_interval, age_limit) fisher_results &lt;- rbind( fisher_results, ft_results ) } } } fisher_results &lt;- as.tibble(fisher_results) ## Warning: `as.tibble()` was deprecated in tibble 2.0.0. ## ℹ Please use `as_tibble()` instead. ## ℹ The signature and semantics have changed, see `?as_tibble`. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. fisher_results &lt;- fisher_results %&gt;% mutate( # comparison = as.factor(comparison), problem = as.factor(problem), inj_interval = as.factor(inj_interval), age_limit = as.factor(age_limit), group1 = as.factor(group1), group2 = as.factor(group2), ) %&gt;% group_by( problem ) fisher_table &lt;- kbl(fisher_results) %&gt;% kable_styling() save_kable(fisher_table, paste0(plot_directory, &quot;stats_table.pdf&quot;)) ## Note that HTML color may not be displayed on PDF properly. fisher_table problem inj_interval age_limit group1 group2 n p p.adj p.adj.signif bouncing-balls 100 10 age-lex_inj-rand lex_inj-none 60 6.12e-01 1.00e+00 ns bouncing-balls 100 10 age-lex_inj-rand lex_inj-rand 60 1.00e+00 1.00e+00 ns bouncing-balls 100 10 lex_inj-none lex_inj-rand 60 2.37e-01 7.11e-01 ns dice-game 100 10 age-lex_inj-rand lex_inj-none 60 2.95e-01 5.90e-01 ns dice-game 100 10 age-lex_inj-rand lex_inj-rand 60 1.92e-01 5.76e-01 ns dice-game 100 10 lex_inj-none lex_inj-rand 60 1.00e+00 1.00e+00 ns gcd 100 10 age-lex_inj-rand lex_inj-none 60 1.00e+00 1.00e+00 ns gcd 100 10 age-lex_inj-rand lex_inj-rand 60 6.01e-01 1.00e+00 ns gcd 100 10 lex_inj-none lex_inj-rand 60 7.95e-01 1.00e+00 ns grade 100 10 age-lex_inj-rand lex_inj-none 60 7.97e-04 2.39e-03 ** grade 100 10 age-lex_inj-rand lex_inj-rand 60 1.94e-03 3.88e-03 ** grade 100 10 lex_inj-none lex_inj-rand 60 1.00e+00 1.00e+00 ns snow-day 100 10 age-lex_inj-rand lex_inj-none 60 1.00e+00 1.00e+00 ns snow-day 100 10 age-lex_inj-rand lex_inj-rand 60 1.00e+00 1.00e+00 ns snow-day 100 10 lex_inj-none lex_inj-rand 60 1.00e+00 1.00e+00 ns bouncing-balls 100 20 age-lex_inj-rand lex_inj-none 60 1.00e+00 1.00e+00 ns bouncing-balls 100 20 age-lex_inj-rand lex_inj-rand 60 1.00e+00 1.00e+00 ns bouncing-balls 100 20 lex_inj-none lex_inj-rand 60 1.00e+00 1.00e+00 ns dice-game 100 20 age-lex_inj-rand lex_inj-none 60 1.19e-01 3.57e-01 ns dice-game 100 20 age-lex_inj-rand lex_inj-rand 60 7.96e-01 7.96e-01 ns dice-game 100 20 lex_inj-none lex_inj-rand 60 2.95e-01 5.90e-01 ns gcd 100 20 age-lex_inj-rand lex_inj-none 60 5.80e-01 1.00e+00 ns gcd 100 20 age-lex_inj-rand lex_inj-rand 60 7.92e-01 1.00e+00 ns gcd 100 20 lex_inj-none lex_inj-rand 60 2.79e-01 8.37e-01 ns grade 100 20 age-lex_inj-rand lex_inj-none 60 1.05e-02 2.10e-02 grade 100 20 age-lex_inj-rand lex_inj-rand 60 1.24e-04 3.72e-04 *** grade 100 20 lex_inj-none lex_inj-rand 60 2.67e-01 2.67e-01 ns snow-day 100 20 age-lex_inj-rand lex_inj-none 60 4.92e-01 1.00e+00 ns snow-day 100 20 age-lex_inj-rand lex_inj-rand 60 1.00e+00 1.00e+00 ns snow-day 100 20 lex_inj-none lex_inj-rand 60 1.00e+00 1.00e+00 ns bouncing-balls 500 10 age-lex_inj-rand lex_inj-none 60 3.53e-01 1.00e+00 ns bouncing-balls 500 10 age-lex_inj-rand lex_inj-rand 60 3.53e-01 1.00e+00 ns bouncing-balls 500 10 lex_inj-none lex_inj-rand 60 1.00e+00 1.00e+00 ns dice-game 500 10 age-lex_inj-rand lex_inj-none 60 1.92e-01 5.76e-01 ns dice-game 500 10 age-lex_inj-rand lex_inj-rand 60 4.30e-01 8.60e-01 ns dice-game 500 10 lex_inj-none lex_inj-rand 60 7.97e-01 8.60e-01 ns gcd 500 10 age-lex_inj-rand lex_inj-none 60 3.03e-02 9.09e-02 ns gcd 500 10 age-lex_inj-rand lex_inj-rand 60 1.81e-01 3.62e-01 ns gcd 500 10 lex_inj-none lex_inj-rand 60 5.80e-01 5.80e-01 ns grade 500 10 age-lex_inj-rand lex_inj-none 60 2.37e-02 4.74e-02 grade 500 10 age-lex_inj-rand lex_inj-rand 60 1.05e-02 3.15e-02 grade 500 10 lex_inj-none lex_inj-rand 60 1.00e+00 1.00e+00 ns snow-day 500 10 age-lex_inj-rand lex_inj-none 60 1.00e+00 1.00e+00 ns snow-day 500 10 age-lex_inj-rand lex_inj-rand 60 2.37e-01 7.11e-01 ns snow-day 500 10 lex_inj-none lex_inj-rand 60 2.37e-01 7.11e-01 ns bouncing-balls 500 20 age-lex_inj-rand lex_inj-none 60 6.12e-01 1.00e+00 ns bouncing-balls 500 20 age-lex_inj-rand lex_inj-rand 60 1.00e+00 1.00e+00 ns bouncing-balls 500 20 lex_inj-none lex_inj-rand 60 2.37e-01 7.11e-01 ns dice-game 500 20 age-lex_inj-rand lex_inj-none 60 4.22e-01 8.44e-01 ns dice-game 500 20 age-lex_inj-rand lex_inj-rand 60 7.96e-01 8.44e-01 ns dice-game 500 20 lex_inj-none lex_inj-rand 60 1.87e-01 5.61e-01 ns gcd 500 20 age-lex_inj-rand lex_inj-none 60 7.79e-01 1.00e+00 ns gcd 500 20 age-lex_inj-rand lex_inj-rand 60 5.96e-01 1.00e+00 ns gcd 500 20 lex_inj-none lex_inj-rand 60 2.79e-01 8.37e-01 ns grade 500 20 age-lex_inj-rand lex_inj-none 60 1.94e-03 5.82e-03 ** grade 500 20 age-lex_inj-rand lex_inj-rand 60 2.37e-02 4.74e-02 grade 500 20 lex_inj-none lex_inj-rand 60 5.52e-01 5.52e-01 ns snow-day 500 20 age-lex_inj-rand lex_inj-none 60 1.00e+00 1.00e+00 ns snow-day 500 20 age-lex_inj-rand lex_inj-rand 60 1.00e+00 1.00e+00 ns snow-day 500 20 lex_inj-none lex_inj-rand 60 1.00e+00 1.00e+00 ns bouncing-balls 1000 10 age-lex_inj-rand lex_inj-none 60 1.00e+00 1.00e+00 ns bouncing-balls 1000 10 age-lex_inj-rand lex_inj-rand 60 1.00e+00 1.00e+00 ns bouncing-balls 1000 10 lex_inj-none lex_inj-rand 60 4.92e-01 1.00e+00 ns dice-game 1000 10 age-lex_inj-rand lex_inj-none 60 1.00e+00 1.00e+00 ns dice-game 1000 10 age-lex_inj-rand lex_inj-rand 60 7.96e-01 1.00e+00 ns dice-game 1000 10 lex_inj-none lex_inj-rand 60 6.06e-01 1.00e+00 ns gcd 1000 10 age-lex_inj-rand lex_inj-none 60 5.52e-01 1.00e+00 ns gcd 1000 10 age-lex_inj-rand lex_inj-rand 60 7.61e-01 1.00e+00 ns gcd 1000 10 lex_inj-none lex_inj-rand 60 1.00e+00 1.00e+00 ns grade 1000 10 age-lex_inj-rand lex_inj-none 60 1.05e-02 2.10e-02 grade 1000 10 age-lex_inj-rand lex_inj-rand 60 1.24e-04 3.72e-04 *** grade 1000 10 lex_inj-none lex_inj-rand 60 2.67e-01 2.67e-01 ns snow-day 1000 10 age-lex_inj-rand lex_inj-none 60 4.92e-01 1.00e+00 ns snow-day 1000 10 age-lex_inj-rand lex_inj-rand 60 4.92e-01 1.00e+00 ns snow-day 1000 10 lex_inj-none lex_inj-rand 60 1.00e+00 1.00e+00 ns bouncing-balls 1000 20 age-lex_inj-rand lex_inj-none 60 1.00e+00 1.00e+00 ns bouncing-balls 1000 20 age-lex_inj-rand lex_inj-rand 60 1.00e+00 1.00e+00 ns bouncing-balls 1000 20 lex_inj-none lex_inj-rand 60 1.00e+00 1.00e+00 ns dice-game 1000 20 age-lex_inj-rand lex_inj-none 60 1.00e+00 1.00e+00 ns dice-game 1000 20 age-lex_inj-rand lex_inj-rand 60 4.22e-01 8.64e-01 ns dice-game 1000 20 lex_inj-none lex_inj-rand 60 2.88e-01 8.64e-01 ns gcd 1000 20 age-lex_inj-rand lex_inj-none 60 2.52e-01 7.56e-01 ns gcd 1000 20 age-lex_inj-rand lex_inj-rand 60 3.82e-01 7.64e-01 ns gcd 1000 20 lex_inj-none lex_inj-rand 60 1.00e+00 1.00e+00 ns grade 1000 20 age-lex_inj-rand lex_inj-none 60 1.68e-05 5.04e-05 **** grade 1000 20 age-lex_inj-rand lex_inj-rand 60 1.94e-03 3.88e-03 ** grade 1000 20 lex_inj-none lex_inj-rand 60 2.88e-01 2.88e-01 ns snow-day 1000 20 age-lex_inj-rand lex_inj-none 60 1.00e+00 1.00e+00 ns snow-day 1000 20 age-lex_inj-rand lex_inj-rand 60 1.00e+00 1.00e+00 ns snow-day 1000 20 lex_inj-none lex_inj-rand 60 4.92e-01 1.00e+00 ns 4.3.2 Proportion of solutions that descend from injected programs plot &lt;- solution_counts %&gt;% filter(ORG_INJECTION_INTERVAL == &quot;100&quot; &amp; AGE_LEX_AGE_ORDER_LIMIT == &quot;10&quot;) %&gt;% ggplot( aes( x = inject_cond, # y = solution_count, y = sol_from_injected, fill = inject_cond ) ) + geom_col(aes(y = solution_count), fill = &quot;grey&quot;, alpha = 0.8) + geom_col() + geom_text( aes(y = -0.7, label = paste0(sol_from_injected, &quot;/&quot;, solution_count)), position = position_dodge(width=0.9) ) + scale_fill_bright() + scale_color_bright() + scale_x_discrete( name = &quot;Inject condition&quot;, limits = c(&quot;age-lex_inj-rand&quot;, &quot;lex_inj-rand&quot;, &quot;lex_inj-none&quot;), labels = c(&quot;Inject\\nAge Sel.&quot;, &quot;Inject\\nNo Age&quot;, &quot;Standard\\nLex.&quot;) ) + scale_y_continuous( &quot;Solution count&quot; ) + facet_wrap( ~ PROBLEM, nrow = 1 ) + theme( legend.position = &quot;none&quot;, axis.text = element_text( size = 18 ), axis.title = element_text( size = 18 ), strip.text = element_text( size = 18 ), panel.border = element_rect(color = &quot;gray&quot;, size = 2) ) ggsave( filename = paste0(plot_directory, &quot;solutions-bar-i100-ol10-prop-descend.pdf&quot;), plot = plot, width = 18, height = 8 ) plot 4.3.3 Lineage age distributions Distributions of lineage age for solutions that descended from injected programs plot &lt;- summary_data %&gt;% filter( inject_cond == &quot;age-lex_inj-rand&quot; &amp; ORG_INJECTION_INTERVAL == &quot;100&quot; &amp; AGE_LEX_AGE_ORDER_LIMIT == &quot;10&quot; &amp; PROBLEM %in% c(&quot;gcd&quot;, &quot;grade&quot;) &amp; sol_descends_injected ) %&gt;% ggplot( aes( x = PROBLEM, # y = elite_elite_age, y = elite_elite_age / update, fill = PROBLEM ) ) + # geom_flat_violin( # position = position_nudge(x = .2, y = 0), # alpha = .8, # adjust = 1.5 # ) + geom_point( mapping = aes(color = PROBLEM), position = position_jitter(width = .2), size = .5, alpha = 0.8 ) + geom_boxplot( width = .2, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name = &quot;Elite age (as % of elapsed generations)&quot; ) + scale_x_discrete( name = &quot;Problem&quot; ) + scale_fill_dark() + scale_color_dark() + # facet_wrap( # ~PROBLEM, # nrow = 1 # # ncol = 1 # ) + # coord_flip() + theme( legend.position = &quot;none&quot;, axis.text.x = element_text( angle = 30, hjust = 1 ), panel.border = element_rect(color = &quot;gray&quot;, size = 2) ) ggsave( filename = paste0(plot_directory, &quot;elite-age-prop.pdf&quot;), plot = plot, width = 6, height = 4 ) "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
